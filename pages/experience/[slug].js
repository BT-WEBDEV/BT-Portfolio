import Head from 'next/head'
import * as React from 'react';
import { documentToReactComponents } from '@contentful/rich-text-react-renderer';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import Link  from '@mui/material/Link';
import Stack from '@mui/material/Stack';
import Paper from '@mui/material/Paper';
import Divider from '@mui/material/Divider';
import OpenInNewIcon from '@mui/icons-material/OpenInNew';
import LinkedInIcon from '@mui/icons-material/LinkedIn';
import ExperienceSkillChips from '../../components/experience/experienceSkillChips';
import styles from '../../styles/experience.module.css'

const drawerWidth = 240;

const query = ` 
query($slug: String!) {
    experienceCollection(where: { slug: $slug }) {
      items {
        order
        slug
        name
        position
        location
        dateRange
        url
        linkedin
        experience {
          json
        }
        skillsCollection(limit:10) {
          items {
            ... on Skills {
              name
              slug
              image {
                url
              }
            }
                  }
        }
        image {
          title
          description
          contentType
          fileName
          size
          url
          width
          height
        }
      }
    }
  }
  `

  /// Get URL Path
export async function getStaticPaths() { 
  const results = await fetch(`https://graphql.contentful.com/content/v1/spaces/${process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID}`, {
    method: "POST",
    headers: {
    "Content-Type": "application/json",
    // Authenticate the request
    Authorization: `Bearer ${process.env.NEXT_PUBLIC_CDA_TOKEN}`,
    },
    // send the GraphQL query
    body: JSON.stringify({
      query: `
        {
          experienceCollection {
            items {
              slug
            }
          }
        }
      `,
    }),
  })
  .then((response) => response.json()); 

  const slugs = results.data.experienceCollection.items.map(experience => experience.slug);

  return {
    paths: slugs.map(slug => ({ params: { slug } })),
    fallback: false,
  }
}

/// GET INFO FROM CONTENTFUL
export async function getStaticProps({ params }) {
    const data = await fetch(`https://graphql.contentful.com/content/v1/spaces/${process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID}`, {
        method: "POST",
        headers: {
        "Content-Type": "application/json",
        // Authenticate the request
        Authorization: `Bearer ${process.env.NEXT_PUBLIC_CDA_TOKEN}`,
        },
        // send the GraphQL query
        body: JSON.stringify({ 
          query,
          variables: {
            slug: params.slug,
          },
      }),
    })
    .then((response) => response.json()); 
    return {
        props: {
          results: data,
          params,
        }
    }
}

// Experience Specific Page 
export default function Experience({results, params}) {
    const experience = results.data.experienceCollection.items.find(
      item => item.slug === params.slug
    );
  
    return (
      <>
        <Head>
          <title>{experience.name}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Box 
          sx={{ 
            display: 'flex', 
            justifyContent: 'center'
          }} 
        >
          <Paper 
            elevation={3} 
            sx={{
              m:5, 
              p: 2,
              display: 'flex',
              width: '100%',
              justifyContent: 'center', 
              flexDirection: 'column', 
              overflow: 'hidden'
            }}
          >
            {/* Experience Icons */}
             <Box 
              className={styles.experienceIcons}
              sx={{
                display: 'flex', 
                flexDirection: 'row',
                justifyContent: 'end', 
              }}
            >
                {experience.url ? (
                <Link 
                  href={experience.url}
                  target='_blank'
                  rel="noopener"
                >
                    <OpenInNewIcon />
                </Link>
                ) : null}

                {experience.linkedin ? (
                <Link 
                  href={experience.linkedin}
                  target='_blank'
                  rel="noopener"
                >
                    <LinkedInIcon />
                </Link>
                ) : null}
            </Box>

            <Box 
              className={styles.experiencePaper} 
              component="main"
              sx={{ 
                display: 'flex', 
                gap: 3,
                flexDirection: 'column',
                flexGrow: 1, p: 3 
                //width: { sm: `calc(100% - ${drawerWidth}px)` } 
              }}
            >
              <Box sx={{ 
                  display: 'flex', 
                  justifyContent: 'center' 
                }}
              > 
                <Box
                  id={experience.slug}
                  className={styles.experienceLink}
                  component="img"
                  justifyContent="center"
                  alt="Skill Logo"
                  src={experience.image.url}
                />
              </Box>

              <Typography variant="h3" align="center">
                {experience.name} 
              </Typography> 

              <Typography variant="p" align="center"> 
                {experience.position}
              </Typography>
              
              <Stack 
                direction="row"
                spacing={1}
                style={{
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    marginTop: '25px'
                }}>
                    {experience.skillsCollection.items.map((skill, index) => {
                        return <ExperienceSkillChips skill={skill} key={index}/>
                    })}
              </Stack>
              <Divider
                sx={{ 
                    pt: 2  
                }}
                />
                <>
                    {documentToReactComponents(
                    experience.experience.json
                    )}
                </>
              <Divider/>  
              <Typography 
                variant="p" 
                align="center"
                sx={{ 
                    pt: 2  
                }}
              > 
                  {experience.location}
              </Typography>
              <Typography variant="p" align="center"> 
                  {experience.dateRange} 
              </Typography>
            </Box>
          </Paper>
        </Box>
        
      </>
    ) 
  }