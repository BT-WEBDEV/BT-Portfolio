import Head from 'next/head'
import * as React from 'react';
import Link from 'next/link';

// Material UI
import Avatar from '@mui/material/Avatar';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import Divider from '@mui/material/Divider';
import Card from '@mui/material/Card'; 
import CardActionArea from '@mui/material/CardActionArea';
import CardMedia from '@mui/material/CardMedia'; 
import CardContent from '@mui/material/CardContent';
import Chip from '@mui/material/Chip';
import Grid from '@mui/material/Grid'; 

// Components
import SkeletonLoading from '../components/skeletonLoading.js';

// Hooks
import useContentful from '../hooks/use-contenful';

//Contentful
import { documentToReactComponents } from '@contentful/rich-text-react-renderer';
import { textAlign } from '@mui/system';

// Query
const query = ` {
  portfolioCollection {
    items {
      order
      slug
      name
      introSnippet
      description {
        json
      }
      image {
        title
        description
        contentType
        fileName
        size
        url
        width
        height
      }
      relatedSkillsCollection(limit:15) {
        items {
          ... on Skills {
            name
            slug
            image {
              url
            }
          }
				}
      }
    }
  }
}
`

const drawerWidth = 240;

export default function Portfolio() {

  let {data, errors} = useContentful(query)

  if (errors) {
    return <span style={{color:"red"}}> {errors.map(error => error.message).join(",")} </span>
  }

  if (!data) { 
    return <SkeletonLoading/> 
  }

  return (
      <>
       <Head>
        <title>Portfolio - Brandon Tetrick</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box sx={{ display: 'flex', justifyContent: 'center' }}>
        <Box
          component="main"
          sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)`, justifyContent: 'center' } }}
        >
          <Typography 
            variant="h1" 
            align="center"
          >
            Portfolio
          </Typography>

          <Typography 
            paragraph align="center"
          >
            Results-driven web developer with over 7 years of experience spanning diverse projects in both public and private sectors. 
            Specializing in developing dynamic websites that blend creativity and cutting-edge technology. 
            Adept at implementing strategic digital marketing initiatives that have led to a 25% average increase in website traffic across various projects. 
            Lifelong learner deeply passionate about web development and digital innovation.
          </Typography>

          <Divider/> 

          <Grid container spacing={3} sx={{ justifyContent: "center", marginTop: "10px" }}>
            {data.portfolioCollection.items
              .sort((a, b) => a.order - b.order) // Sort the items by the "order" property
              .map((project) => (
                <Grid item xs={12} sm={12} md={6} lg={4} xl={3} key={project.slug} sx={{ display: 'flex' }}>
                  <Card>
                    <Link key={project.slug} href={`/portfolio/${project.slug}`} passHref>
                      <CardActionArea>
                        <CardMedia component="img" height="200" image={project.image.url} style={{ objectFit: 'contain', padding: '10px' }} />
                        <CardContent>
                          <Typography 
                            variant="h4" 
                            component="div"
                            sx={{
                              textAlign: 'center'
                            }}
                          >
                            {project.name}
                          </Typography>
                          <Typography
                            sx={{
                              display: "-webkit-box",
                              overflow: "hidden",
                              textOverflow: "ellipsis",
                              mt: 2, 
                              textAlign: 'center'
                            }}
                            variant="body2"
                          >
                            {project.introSnippet}
                          </Typography>
                        </CardContent>
                      </CardActionArea>
                    </Link>
                    <Box />
                    <Box
                      sx={{
                        display: 'flex', 
                        justifyContent: 'center', 
                        gap: '10px',
                        flexWrap: 'wrap',  
                        padding: '10px'
                      }}
                    >
                      {/* Map through relatedSkillsCollection and display chips */}
                      {project.relatedSkillsCollection.items.slice(0, 5).map((skill, index) => (
                        <Link key={skill.slug} href={`/skills/${skill.slug}`} passHref>
                          <Chip
                            avatar={<Avatar alt={skill.slug} src={skill.image.url} />}
                            label={skill.name}
                            variant="outlined"
                          />
                        </Link>
                      ))}
                      {project.relatedSkillsCollection.items.length > 5 && (
                        <Typography
                          component="span"
                          variant="body2"
                          sx={{
                            color: 'black', 
                            marginTop: 'auto', 
                            marginBottom: 'auto'
                          }}
                        >
                          + {project.relatedSkillsCollection.items.length - 5} more...
                        </Typography>
                      )}
                    </Box>
                  </Card>
                </Grid>
              ))}
          </Grid>
        </Box>
      </Box>
      </>
  )
}
